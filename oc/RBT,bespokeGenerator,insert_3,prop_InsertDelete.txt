[prop_InsertDelete|
generated error fail pass / total     time test name
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete (generating)
[✗]   47    0    1   46 / 1000     0.0s test_prop_InsertDelete

--- Failure --------------------------------------------------------------------

Test test_prop_InsertDelete failed (3 shrink steps):

(Tree (B,Tree (B,Tree (B,Tree (B,Empty,0,8,Empty),1,5,Tree (B,Tree (R,Empty,2,55,Empty),3,6,Tree (R,Empty,4,94,Empty))),6,434,Tree (B,Tree (B,Empty,7,994,Tree (R,Empty,8,71,Empty)),9,43,Tree (B,Empty,23,5,Empty))),25,0,Tree (R,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Empty,26,62,Empty),28,4,Empty),32,3,Tree (B,Tree (R,Empty,42,1,Empty),50,855,Empty)),60,8645,Tree (R,Tree (B,Empty,62,8,Empty),63,1182,Tree (B,Empty,71,79,Empty))),78,0,Tree (B,Tree (R,Tree (B,Empty,82,47,Empty),86,6,Tree (B,Empty,90,21,Empty)),94,999,Tree (R,Tree (B,Empty,114,6,Empty),187,412,Tree (B,Empty,201,6,Empty)))),213,173,Tree (B,Tree (B,Tree (B,Tree (R,Empty,217,27,Empty),323,1,Empty),337,5,Tree (B,Empty,342,772,Empty)),373,9,Tree (R,Tree (B,Tree (B,Tree (R,Empty,422,7,Empty),455,9,Empty),597,8,Tree (B,Empty,622,4,Empty)),845,8,Tree (B,Tree (B,Tree (R,Empty,2660,5,Empty),8408,32,Empty),9314,5,Tree (B,Empty,9891,9,Empty)))))), 4, 4, 0)
================================================================================
failure (1 tests failed, 0 tests errored, ran 1 tests)
|prop_InsertDelete -> 7.84]
[prop_InsertDelete|
generated error fail pass / total     time test name
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete (generating)
[✗]   64    0    1   63 / 1000     0.0s test_prop_InsertDelete

--- Failure --------------------------------------------------------------------

Test test_prop_InsertDelete failed (4 shrink steps):

(Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Empty,0,0,Empty),1,372,Empty),2,7,Tree (B,Empty,3,209,Empty)),4,620,Tree (R,Tree (B,Tree (R,Empty,5,67,Empty),6,452,Empty),7,90,Tree (B,Empty,8,27,Empty))),9,48,Tree (R,Tree (B,Tree (B,Tree (R,Empty,11,4,Empty),14,817,Empty),17,50,Tree (B,Empty,18,334,Empty)),20,6,Tree (B,Tree (B,Empty,37,93,Empty),45,73,Tree (B,Empty,49,93,Tree (R,Empty,68,93,Empty))))),75,1288,Tree (R,Tree (B,Tree (B,Tree (B,Tree (R,Empty,76,19,Empty),78,0,Empty),86,69,Tree (B,Empty,88,38,Empty)),149,820,Tree (B,Tree (B,Empty,213,0,Empty),227,0,Tree (B,Empty,259,7,Empty))),311,1,Tree (B,Tree (B,Tree (B,Empty,336,3,Empty),400,660,Tree (R,Tree (B,Empty,536,8,Empty),704,212,Tree (B,Tree (R,Empty,706,574,Empty),792,7,Empty))),805,2,Tree (B,Tree (B,Empty,823,6,Empty),878,196,Tree (R,Tree (B,Empty,944,264,Empty),3619,9,Tree (B,Tree (R,Empty,5008,2,Empty),5481,140,Tree (R,Empty,9707,596,Empty))))))), 4, 4, 0)
================================================================================
failure (1 tests failed, 0 tests errored, ran 1 tests)
|prop_InsertDelete -> 5.46]
[prop_InsertDelete|
generated error fail pass / total     time test name
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete (generating)
[✗]    8    0    1    7 / 1000     0.0s test_prop_InsertDelete

--- Failure --------------------------------------------------------------------

Test test_prop_InsertDelete failed (4 shrink steps):

(Tree (B,Tree (R,Tree (B,Empty,7,42,Empty),37,2,Tree (B,Empty,98,194,Empty)),907,60,Tree (B,Empty,976,31,Empty)), 7, 7, 0)
================================================================================
failure (1 tests failed, 0 tests errored, ran 1 tests)
|prop_InsertDelete -> 0.18]
[prop_InsertDelete|
generated error fail pass / total     time test name
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete (generating)
[✗]   24    0    1   23 / 1000     0.0s test_prop_InsertDelete

--- Failure --------------------------------------------------------------------

Test test_prop_InsertDelete failed (4 shrink steps):

(Tree (B,Tree (B,Tree (R,Empty,5,8,Empty),7,72,Empty),24,76,Tree (B,Empty,217,8037,Empty)), 7, 7, 0)
================================================================================
failure (1 tests failed, 0 tests errored, ran 1 tests)
|prop_InsertDelete -> 2.81]
[prop_InsertDelete|
generated error fail pass / total     time test name
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete (generating)
[✗]   36    0    1   35 / 1000     0.0s test_prop_InsertDelete

--- Failure --------------------------------------------------------------------

Test test_prop_InsertDelete failed (1 shrink steps):

(Tree (B,Tree (B,Tree (B,Tree (B,Empty,0,269,Empty),1,5,Tree (B,Empty,2,4,Tree (R,Empty,3,9,Empty))),4,1,Tree (B,Tree (R,Tree (B,Empty,5,7,Empty),6,4,Tree (B,Empty,7,471,Tree (R,Empty,8,9,Empty))),9,8,Tree (B,Empty,18,3,Empty))),30,65,Tree (B,Tree (B,Tree (R,Tree (B,Empty,32,4,Empty),38,3,Tree (B,Empty,45,3,Empty)),50,1,Tree (R,Tree (B,Empty,56,2,Empty),60,1,Tree (B,Tree (R,Empty,65,60,Empty),67,4,Empty))),71,5151,Tree (R,Tree (B,Tree (R,Tree (B,Empty,72,301,Empty),74,567,Tree (B,Tree (R,Empty,83,5,Empty),85,336,Empty)),87,1,Tree (B,Empty,164,0,Tree (R,Empty,496,3,Empty))),565,51,Tree (B,Tree (R,Tree (B,Empty,623,9,Empty),764,7,Tree (B,Empty,861,2,Tree (R,Empty,936,672,Empty))),989,28,Tree (R,Tree (B,Empty,3017,440,Empty),3489,5,Tree (B,Empty,3562,9,Empty)))))), 5, 5, 0)
================================================================================
failure (1 tests failed, 0 tests errored, ran 1 tests)
|prop_InsertDelete -> 3.20]
[prop_InsertDelete|
generated error fail pass / total     time test name
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete (generating)
[✗]    4    0    1    3 / 1000     0.0s test_prop_InsertDelete

--- Failure --------------------------------------------------------------------

Test test_prop_InsertDelete failed (0 shrink steps):

(Tree (B,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Empty,0,83,Empty),1,2,Tree (B,Empty,2,95,Empty)),3,784,Tree (B,Empty,4,465,Empty)),5,139,Tree (B,Tree (B,Empty,6,3,Empty),7,1138,Tree (R,Tree (B,Tree (R,Empty,8,6,Empty),9,4545,Empty),10,140,Tree (B,Empty,12,1,Empty)))),15,4,Tree (R,Tree (B,Tree (B,Tree (B,Empty,19,76,Empty),27,335,Tree (R,Tree (B,Tree (R,Empty,30,157,Empty),32,930,Empty),40,9,Tree (B,Empty,41,45,Empty))),43,876,Tree (B,Tree (B,Empty,44,2,Empty),51,936,Tree (B,Empty,52,34,Empty))),53,15,Tree (B,Tree (B,Tree (B,Empty,59,2,Empty),62,4,Tree (B,Empty,64,786,Empty)),65,2111,Tree (B,Tree (B,Empty,67,4,Tree (R,Empty,68,8,Empty)),69,37,Tree (R,Tree (B,Tree (R,Empty,73,54,Empty),74,6,Empty),77,0,Tree (B,Empty,78,0,Empty)))))),80,8,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Empty,84,4,Empty),92,1,Empty),96,7,Tree (B,Empty,97,997,Empty)),98,3,Tree (R,Tree (B,Empty,101,1,Empty),105,32,Tree (B,Empty,113,0,Tree (R,Empty,114,6,Empty)))),192,7,Tree (R,Tree (B,Tree (R,Tree (B,Empty,207,4,Empty),223,58,Tree (B,Empty,307,9,Empty)),316,75,Tree (R,Tree (B,Tree (R,Empty,330,94,Empty),343,3,Empty),357,7,Tree (B,Tree (R,Empty,428,537,Empty),431,2844,Empty))),438,46,Tree (B,Tree (R,Tree (B,Tree (R,Empty,444,1,Empty),456,59,Empty),477,9,Tree (B,Empty,497,6,Empty)),532,538,Tree (B,Tree (R,Empty,541,779,Empty),594,8,Tree (R,Empty,602,204,Empty))))),657,2,Tree (B,Tree (B,Tree (B,Empty,672,6,Empty),687,23,Tree (R,Tree (B,Empty,722,7,Empty),741,90,Tree (B,Empty,748,718,Empty))),805,7,Tree (R,Tree (B,Tree (R,Tree (B,Empty,854,472,Empty),908,88,Tree (B,Empty,933,9,Tree (R,Empty,934,1,Empty))),937,6,Tree (B,Empty,945,6,Tree (R,Empty,947,10,Empty))),973,8,Tree (B,Tree (B,Empty,991,717,Tree (R,Empty,2151,0,Empty)),3920,327,Tree (R,Tree (B,Tree (R,Empty,4167,4,Empty),5263,6921,Empty),6614,41,Tree (B,Tree (R,Empty,9399,4929,Empty),9563,0,Tree (R,Empty,9700,6,Empty)))))))), 0, 0, 0)
================================================================================
failure (1 tests failed, 0 tests errored, ran 1 tests)
|prop_InsertDelete -> 0.42]
[prop_InsertDelete|
generated error fail pass / total     time test name
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete (generating)
[✗]   58    0    1   57 / 1000     0.0s test_prop_InsertDelete

--- Failure --------------------------------------------------------------------

Test test_prop_InsertDelete failed (3 shrink steps):

(Tree (B,Tree (B,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Empty,0,61,Empty),1,6,Tree (B,Empty,2,1,Tree (R,Empty,3,6,Empty))),4,8,Tree (B,Tree (R,Empty,5,3,Empty),6,6,Empty)),7,50,Tree (B,Tree (B,Empty,8,1,Empty),9,3,Tree (B,Tree (R,Empty,10,9,Empty),13,6,Empty))),14,7,Tree (B,Tree (B,Tree (B,Empty,16,15,Empty),17,87,Tree (R,Tree (B,Tree (R,Empty,20,51,Empty),21,4,Tree (R,Empty,23,8203,Empty)),24,494,Tree (B,Empty,25,380,Tree (R,Empty,27,6,Empty)))),29,2,Tree (B,Tree (B,Empty,31,14,Empty),32,8,Tree (B,Empty,33,8,Empty)))),34,7,Tree (B,Tree (B,Tree (B,Tree (B,Tree (R,Empty,36,0,Empty),37,432,Empty),38,99,Tree (B,Tree (R,Empty,39,1,Empty),43,80,Tree (R,Empty,44,9490,Empty))),49,79,Tree (B,Tree (B,Empty,51,1,Empty),52,78,Tree (B,Empty,54,69,Empty))),55,291,Tree (B,Tree (B,Tree (B,Empty,58,95,Empty),61,10,Tree (B,Empty,62,6900,Empty)),64,2,Tree (B,Tree (R,Tree (B,Empty,68,757,Empty),70,7,Tree (B,Empty,71,30,Empty)),72,2,Tree (R,Tree (B,Empty,75,52,Empty),77,58,Tree (B,Empty,78,1,Empty)))))),81,924,Tree (B,Tree (B,Tree (B,Tree (B,Tree (B,Tree (R,Empty,84,2,Empty),86,8,Empty),87,924,Tree (B,Empty,88,0,Tree (R,Empty,89,7,Empty))),90,10,Tree (B,Tree (B,Tree (R,Empty,91,3,Empty),92,54,Tree (R,Empty,94,169,Empty)),96,64,Tree (R,Tree (B,Empty,98,0,Tree (R,Empty,99,324,Empty)),133,6,Tree (B,Empty,135,5,Empty)))),150,4,Tree (B,Tree (B,Tree (B,Tree (R,Empty,159,4,Empty),160,133,Tree (R,Empty,171,38,Empty)),172,766,Tree (B,Empty,192,1,Tree (R,Empty,201,7,Empty))),212,9483,Tree (B,Tree (R,Tree (B,Tree (R,Empty,215,4,Empty),225,4763,Empty),300,12,Tree (B,Empty,316,3,Empty)),335,3,Tree (R,Tree (B,Tree (R,Empty,361,9,Empty),374,48,Empty),413,8,Tree (B,Empty,429,0,Empty))))),452,873,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Empty,466,12,Empty),471,57,Tree (B,Tree (R,Empty,488,5,Empty),499,2,Empty)),516,5,Tree (B,Empty,539,62,Empty)),542,92,Tree (B,Tree (R,Tree (B,Tree (R,Empty,567,2,Empty),583,25,Tree (R,Empty,603,51,Empty)),609,77,Tree (B,Empty,611,150,Empty)),615,3,Tree (R,Tree (B,Empty,648,82,Empty),668,12,Tree (B,Empty,672,9,Empty)))),679,4,Tree (R,Tree (B,Tree (B,Empty,685,9,Empty),688,76,Tree (B,Empty,689,2,Empty)),703,4,Tree (B,Tree (B,Empty,708,56,Empty),715,277,Tree (B,Empty,722,6,Empty)))),738,8,Tree (B,Tree (B,Tree (B,Empty,743,5,Empty),759,1,Tree (B,Tree (R,Empty,765,1,Empty),770,4,Empty)),782,756,Tree (R,Tree (B,Tree (B,Empty,786,519,Empty),811,48,Tree (B,Tree (R,Empty,821,837,Empty),832,5,Tree (R,Empty,844,49,Empty))),846,29,Tree (B,Tree (B,Empty,859,543,Empty),891,5117,Tree (B,Empty,909,95,Tree (R,Empty,945,7362,Empty)))))),961,4,Tree (R,Tree (B,Tree (B,Tree (B,Tree (R,Empty,976,3,Empty),981,166,Empty),1002,279,Tree (R,Tree (B,Empty,1456,37,Tree (R,Empty,2050,850,Empty)),2058,16,Tree (B,Tree (R,Empty,2581,8,Empty),2615,57,Empty))),3226,851,Tree (B,Tree (R,Tree (B,Empty,3289,70,Empty),3508,4,Tree (B,Empty,3511,190,Tree (R,Empty,4553,8,Empty))),6059,65,Tree (B,Empty,6227,40,Empty))),6357,455,Tree (B,Tree (B,Tree (B,Empty,6385,418,Tree (R,Empty,6865,92,Empty)),6952,2,Tree (B,Empty,7015,1702,Empty)),7416,467,Tree (B,Tree (R,Tree (B,Empty,8041,247,Empty),8072,86,Tree (B,Empty,9100,603,Empty)),9251,2,Tree (R,Tree (B,Tree (R,Empty,9297,3,Empty),9593,247,Empty),9745,4,Tree (B,Empty,9791,4008,Empty)))))))), 7, 7, 0)
================================================================================
failure (1 tests failed, 0 tests errored, ran 1 tests)
|prop_InsertDelete -> 7.04]
[prop_InsertDelete|
generated error fail pass / total     time test name
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete (generating)
[✗]   14    0    1   13 / 1000     0.0s test_prop_InsertDelete

--- Failure --------------------------------------------------------------------

Test test_prop_InsertDelete failed (4 shrink steps):

(Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Tree (B,Tree (B,Empty,0,7,Empty),1,5,Tree (B,Empty,2,8,Tree (R,Empty,3,8,Empty))),4,63,Tree (B,Tree (R,Tree (B,Empty,5,2,Empty),6,4,Tree (B,Empty,7,973,Tree (R,Empty,8,6,Empty))),9,7177,Tree (B,Tree (R,Empty,10,2,Empty),11,38,Tree (R,Empty,12,0,Empty)))),13,205,Tree (B,Tree (B,Tree (B,Empty,14,0,Empty),15,4,Tree (B,Empty,16,5,Empty)),17,947,Tree (B,Tree (B,Empty,18,918,Empty),19,0,Tree (B,Empty,20,4,Empty)))),21,2,Tree (B,Tree (B,Tree (B,Empty,22,598,Empty),23,8,Tree (B,Empty,24,5,Empty)),25,1,Tree (B,Tree (B,Empty,26,39,Empty),27,461,Tree (R,Tree (B,Empty,28,73,Empty),29,8,Tree (B,Empty,30,3,Empty))))),31,92,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Empty,32,8,Empty),33,2,Tree (R,Empty,34,3,Empty)),35,4523,Tree (B,Tree (R,Empty,36,9,Empty),37,52,Tree (R,Empty,38,4716,Empty))),39,663,Tree (R,Tree (B,Empty,40,752,Empty),41,3,Tree (B,Empty,42,0,Tree (R,Empty,43,9,Empty)))),44,2,Tree (R,Tree (B,Tree (R,Tree (B,Tree (R,Empty,45,723,Empty),46,36,Empty),47,4258,Tree (B,Empty,48,8,Tree (R,Empty,49,2,Empty))),50,4,Tree (B,Empty,51,19,Empty)),52,659,Tree (B,Tree (B,Empty,53,0,Empty),54,4,Tree (B,Tree (R,Empty,55,751,Empty),56,4,Tree (R,Empty,57,60,Empty))))),58,184,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Tree (R,Empty,59,5,Empty),60,2,Tree (R,Empty,61,4108,Empty)),62,67,Tree (B,Empty,63,73,Empty)),64,5,Tree (B,Empty,65,9,Empty)),66,48,Tree (B,Tree (B,Empty,67,3,Empty),68,28,Tree (R,Tree (B,Empty,69,658,Empty),70,85,Tree (B,Empty,71,8,Empty)))),72,3,Tree (B,Tree (R,Tree (B,Tree (R,Empty,73,2,Empty),74,908,Empty),75,29,Tree (B,Empty,76,5,Tree (R,Empty,77,6,Empty))),78,786,Tree (B,Empty,79,897,Empty))))),80,9,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Empty,81,4,Empty),82,55,Tree (B,Tree (R,Empty,83,8,Empty),84,9,Empty)),85,9564,Tree (B,Empty,86,849,Empty)),87,580,Tree (B,Tree (B,Tree (R,Empty,88,121,Empty),89,8,Empty),90,95,Tree (B,Empty,91,5408,Tree (R,Empty,92,856,Empty)))),93,3,Tree (B,Tree (R,Tree (B,Tree (B,Empty,94,72,Empty),95,5,Tree (B,Empty,96,16,Empty)),97,953,Tree (B,Tree (B,Tree (R,Empty,98,0,Empty),99,1,Empty),100,8,Tree (B,Tree (R,Empty,101,34,Empty),102,4,Empty))),103,1,Tree (R,Tree (B,Tree (B,Tree (R,Empty,105,8,Empty),107,6,Empty),109,2,Tree (B,Empty,110,8,Tree (R,Empty,111,792,Empty))),113,4,Tree (B,Tree (B,Tree (R,Empty,114,837,Empty),115,7,Empty),116,20,Tree (B,Empty,118,2,Tree (R,Empty,121,9,Empty))))))),122,7,Tree (B,Tree (B,Tree (R,Tree (B,Tree (B,Tree (B,Tree (R,Empty,124,34,Empty),125,1,Tree (R,Empty,126,8,Empty)),127,8,Tree (R,Tree (B,Empty,128,332,Empty),129,9,Tree (B,Tree (R,Empty,130,0,Empty),131,145,Empty))),132,66,Tree (B,Tree (B,Empty,133,0,Empty),134,3,Tree (R,Tree (B,Empty,135,3,Empty),136,5,Tree (B,Empty,137,9,Empty)))),139,8,Tree (B,Tree (B,Tree (B,Empty,140,7,Tree (R,Empty,141,7,Empty)),143,106,Tree (B,Empty,144,250,Empty)),145,4,Tree (B,Tree (B,Empty,146,631,Empty),147,1,Tree (B,Empty,148,43,Empty)))),151,5,Tree (B,Tree (B,Tree (B,Empty,152,4,Empty),153,5,Tree (B,Empty,154,785,Tree (R,Empty,155,653,Empty))),157,6,Tree (B,Tree (R,Tree (B,Empty,158,749,Empty),159,3,Tree (B,Empty,160,271,Empty)),162,3,Tree (B,Tree (R,Empty,163,9,Empty),165,4,Empty)))),166,1656,Tree (B,Tree (R,Tree (B,Tree (B,Tree (B,Empty,167,2,Empty),168,56,Tree (B,Empty,170,9,Empty)),171,4,Tree (B,Tree (R,Tree (B,Empty,172,178,Empty),173,9,Tree (B,Empty,174,860,Empty)),175,5,Tree (B,Empty,176,3,Empty))),177,124,Tree (B,Tree (B,Tree (R,Tree (B,Empty,178,88,Tree (R,Empty,179,65,Empty)),180,463,Tree (B,Tree (R,Empty,181,48,Empty),182,2524,Empty)),185,713,Tree (B,Empty,187,3,Empty)),188,92,Tree (B,Tree (B,Empty,189,3,Empty),190,7927,Tree (B,Empty,191,9,Empty)))),192,7,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Empty,194,7,Empty),196,23,Tree (B,Tree (R,Empty,197,1,Empty),198,5,Empty)),201,96,Tree (B,Empty,202,9,Tree (R,Empty,203,6,Empty))),204,1,Tree (B,Tree (B,Empty,205,54,Empty),206,1,Tree (B,Empty,208,9,Empty))),209,5,Tree (B,Tree (B,Empty,210,9,Tree (R,Empty,211,744,Empty)),212,997,Tree (R,Tree (B,Tree (R,Empty,213,13,Empty),214,7,Empty),215,4,Tree (B,Empty,217,0,Empty))))))),218,686,Tree (B,Tree (B,Tree (R,Tree (B,Tree (B,Tree (R,Tree (B,Empty,219,6,Tree (R,Empty,220,7145,Empty)),222,5,Tree (B,Empty,224,12,Empty)),225,4,Tree (R,Tree (B,Empty,226,95,Empty),227,4,Tree (B,Empty,229,142,Tree (R,Empty,230,77,Empty)))),231,6,Tree (R,Tree (B,Tree (B,Tree (R,Empty,232,13,Empty),234,7,Tree (R,Empty,235,2,Empty)),237,6,Tree (B,Empty,238,5,Tree (R,Empty,240,7,Empty))),241,24,Tree (B,Tree (B,Tree (R,Empty,242,6,Empty),243,7619,Tree (R,Empty,244,91,Empty)),245,1,Tree (B,Empty,246,429,Empty)))),248,0,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Empty,249,44,Empty),250,0,Tree (B,Empty,251,5,Tree (R,Empty,252,40,Empty))),253,401,Tree (B,Empty,254,8,Empty)),256,381,Tree (B,Tree (B,Empty,258,592,Empty),259,7,Tree (B,Empty,260,68,Tree (R,Empty,261,3977,Empty)))),262,9,Tree (R,Tree (B,Tree (R,Tree (B,Tree (R,Empty,263,897,Empty),266,5771,Empty),267,0,Tree (B,Empty,269,5103,Tree (R,Empty,270,8,Empty))),271,3,Tree (B,Empty,272,0,Empty)),273,66,Tree (B,Tree (B,Empty,274,89,Tree (R,Empty,276,13,Empty)),277,0,Tree (B,Empty,278,42,Empty))))),279,71,Tree (R,Tree (B,Tree (B,Tree (B,Empty,280,2,Empty),281,4,Tree (R,Tree (B,Empty,282,0,Empty),283,7,Tree (B,Tree (R,Empty,284,7,Empty),285,7,Tree (R,Empty,286,2,Empty)))),288,54,Tree (R,Tree (B,Tree (B,Empty,289,621,Empty),290,8,Tree (B,Tree (R,Empty,291,6,Empty),293,547,Tree (R,Empty,294,76,Empty))),295,7,Tree (B,Tree (B,Empty,296,64,Empty),298,6,Tree (B,Tree (R,Empty,299,18,Empty),301,47,Empty)))),302,2,Tree (B,Tree (B,Tree (B,Tree (R,Empty,303,29,Empty),304,84,Empty),306,2,Tree (R,Tree (B,Empty,308,441,Empty),309,47,Tree (B,Empty,310,95,Empty))),311,29,Tree (R,Tree (B,Tree (B,Tree (R,Empty,312,81,Empty),313,43,Empty),314,44,Tree (B,Empty,315,670,Tree (R,Empty,316,2,Empty))),317,2546,Tree (B,Tree (B,Tree (R,Empty,319,833,Empty),320,3982,Empty),322,13,Tree (B,Empty,323,5684,Tree (R,Empty,326,7,Empty))))))),327,825,Tree (R,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Empty,329,0,Empty),330,918,Tree (B,Empty,331,4,Empty)),333,226,Tree (R,Tree (B,Empty,334,6,Empty),336,5,Tree (B,Empty,337,3,Empty))),339,2,Tree (B,Tree (R,Tree (B,Empty,340,60,Empty),341,7,Tree (B,Empty,342,3,Empty)),343,0,Tree (R,Tree (B,Empty,344,6,Empty),345,0,Tree (B,Empty,346,9,Empty)))),347,81,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Tree (R,Empty,348,4,Empty),349,1,Empty),350,918,Tree (B,Empty,351,4,Empty)),352,5,Tree (R,Tree (B,Empty,353,29,Empty),354,1,Tree (B,Empty,355,90,Tree (R,Empty,357,2,Empty)))),358,522,Tree (B,Tree (R,Tree (B,Empty,359,3,Tree (R,Empty,360,590,Empty)),361,9,Tree (B,Empty,363,4,Tree (R,Empty,364,246,Empty))),367,913,Tree (R,Tree (B,Empty,368,5,Tree (R,Empty,369,502,Empty)),370,1692,Tree (B,Empty,371,9,Empty)))),372,38,Tree (R,Tree (B,Tree (B,Tree (R,Empty,373,0,Empty),374,1,Empty),375,2,Tree (B,Empty,376,57,Tree (R,Empty,377,693,Empty))),378,388,Tree (B,Tree (R,Tree (B,Empty,379,8,Tree (R,Empty,381,395,Empty)),382,19,Tree (B,Tree (R,Empty,383,350,Empty),385,1,Empty)),386,78,Tree (B,Tree (R,Empty,389,2,Empty),391,237,Empty))))),392,9,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Empty,393,1258,Empty),394,0,Tree (B,Empty,395,40,Tree (R,Empty,397,9,Empty))),399,87,Tree (R,Tree (B,Empty,400,35,Empty),401,53,Tree (B,Empty,402,870,Tree (R,Empty,403,59,Empty)))),404,9817,Tree (B,Tree (B,Empty,406,189,Empty),407,4,Tree (R,Tree (B,Empty,408,6,Tree (R,Empty,409,0,Empty)),410,8,Tree (B,Empty,411,1,Empty)))),413,573,Tree (R,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Empty,415,4,Empty),416,649,Tree (B,Empty,417,1,Empty)),418,309,Tree (B,Empty,419,32,Empty)),420,9,Tree (B,Tree (B,Empty,421,305,Tree (R,Empty,422,8,Empty)),423,43,Tree (B,Empty,424,1,Empty))),425,0,Tree (R,Tree (B,Tree (B,Empty,426,78,Tree (R,Empty,427,9,Empty)),429,6,Tree (R,Tree (B,Empty,430,48,Tree (R,Empty,431,913,Empty)),432,448,Tree (B,Tree (R,Empty,433,7,Empty),435,3,Tree (R,Empty,437,5,Empty)))),438,13,Tree (B,Tree (R,Tree (B,Empty,439,504,Empty),440,3,Tree (B,Tree (R,Empty,441,3,Empty),442,159,Tree (R,Empty,443,716,Empty))),444,768,Tree (R,Tree (B,Empty,445,987,Empty),446,4,Tree (B,Empty,447,9,Empty))))),448,5,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Empty,449,3458,Empty),450,7,Tree (R,Empty,451,9,Empty)),452,2,Tree (B,Tree (R,Empty,453,79,Empty),454,422,Tree (R,Empty,455,0,Empty))),456,0,Tree (B,Tree (R,Empty,457,48,Empty),459,2,Empty)),460,416,Tree (B,Tree (B,Tree (R,Empty,461,5,Empty),462,97,Tree (R,Empty,463,11,Empty)),464,67,Tree (B,Empty,465,2826,Empty)))))))),466,0,Tree (B,Tree (R,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Empty,467,0,Empty),469,14,Tree (B,Empty,470,5241,Tree (R,Empty,472,9,Empty))),473,95,Tree (B,Empty,474,6455,Tree (R,Empty,477,1,Empty))),478,3988,Tree (B,Tree (B,Tree (R,Empty,479,57,Empty),480,4,Empty),481,8,Tree (R,Tree (B,Empty,482,3,Empty),483,6,Tree (B,Empty,484,0,Tree (R,Empty,485,3,Empty))))),486,21,Tree (B,Tree (R,Tree (B,Empty,487,6,Tree (R,Empty,488,1,Empty)),489,66,Tree (B,Empty,490,2,Empty)),491,7,Tree (R,Tree (B,Empty,492,2,Empty),493,462,Tree (B,Tree (R,Empty,494,5,Empty),496,22,Empty)))),497,864,Tree (R,Tree (B,Tree (R,Tree (B,Tree (B,Empty,498,914,Empty),500,81,Tree (B,Empty,501,6,Empty)),502,39,Tree (B,Tree (B,Tree (R,Empty,503,73,Empty),504,387,Empty),505,421,Tree (R,Tree (B,Empty,507,5,Empty),508,503,Tree (B,Empty,509,9,Tree (R,Empty,510,362,Empty))))),511,0,Tree (B,Tree (R,Tree (B,Tree (R,Empty,513,55,Empty),514,1,Empty),515,58,Tree (B,Empty,516,753,Empty)),519,92,Tree (B,Empty,520,88,Empty))),521,2,Tree (B,Tree (B,Tree (B,Empty,522,77,Empty),523,463,Tree (B,Empty,524,2,Empty)),525,477,Tree (B,Tree (B,Empty,526,8,Empty),527,31,Tree (B,Empty,528,4587,Empty))))),529,5,Tree (R,Tree (B,Tree (R,Tree (B,Tree (B,Tree (B,Tree (R,Empty,530,9,Empty),531,9,Tree (R,Empty,532,7,Empty)),533,2,Tree (B,Empty,534,5,Empty)),535,22,Tree (R,Tree (B,Tree (R,Tree (B,Empty,536,59,Empty),537,43,Tree (B,Empty,538,381,Empty)),539,6,Tree (B,Tree (R,Empty,540,61,Empty),542,8,Empty)),543,2,Tree (B,Tree (B,Empty,544,378,Empty),545,581,Tree (B,Empty,546,23,Empty)))),549,1,Tree (B,Tree (B,Tree (R,Tree (B,Empty,550,8606,Empty),553,9,Tree (B,Empty,554,6,Empty)),555,393,Tree (B,Tree (R,Empty,556,3,Empty),557,264,Empty)),558,1450,Tree (R,Tree (B,Tree (B,Empty,560,95,Tree (R,Empty,561,7,Empty)),562,599,Tree (B,Empty,563,10,Empty)),566,6,Tree (B,Tree (R,Tree (B,Empty,568,50,Tree (R,Empty,569,80,Empty)),570,4,Tree (B,Empty,571,3,Empty)),572,6,Tree (B,Empty,573,378,Empty))))),575,6,Tree (R,Tree (B,Tree (B,Tree (B,Empty,576,9,Tree (R,Empty,577,363,Empty)),578,9,Tree (B,Empty,579,9504,Empty)),580,3018,Tree (B,Tree (R,Tree (B,Tree (R,Empty,581,9,Empty),582,6171,Empty),583,8,Tree (B,Empty,584,2950,Tree (R,Empty,585,7,Empty))),586,19,Tree (B,Empty,587,1,Empty))),588,808,Tree (B,Tree (B,Tree (B,Tree (R,Empty,589,8,Empty),592,29,Tree (R,Empty,594,9,Empty)),596,60,Tree (R,Tree (B,Empty,599,2,Empty),600,8,Tree (B,Empty,601,115,Empty))),602,0,Tree (R,Tree (B,Tree (R,Tree (B,Empty,603,2,Tree (R,Empty,604,27,Empty)),605,2,Tree (B,Empty,606,9,Empty)),607,5264,Tree (B,Empty,608,351,Empty)),609,8,Tree (B,Tree (B,Empty,610,3,Tree (R,Empty,611,7,Empty)),612,97,Tree (B,Empty,613,0,Tree (R,Empty,614,159,Empty))))))),615,2,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Empty,616,66,Empty),617,7,Empty),618,30,Tree (B,Empty,619,97,Empty)),620,7,Tree (B,Empty,621,7,Empty)),623,83,Tree (B,Tree (B,Tree (R,Empty,624,6,Empty),625,49,Empty),627,8,Tree (B,Empty,629,5,Empty))),630,3,Tree (B,Tree (B,Tree (B,Empty,631,2,Tree (R,Empty,633,5,Empty)),634,2,Tree (B,Empty,635,582,Tree (R,Empty,636,5,Empty))),637,47,Tree (R,Tree (B,Tree (B,Empty,639,6,Empty),640,1,Tree (B,Empty,641,67,Empty)),642,9,Tree (B,Tree (B,Empty,643,1900,Empty),644,1,Tree (R,Tree (B,Empty,645,5,Empty),647,0,Tree (B,Empty,648,8653,Empty)))))))),649,7,Tree (B,Tree (R,Tree (B,Tree (B,Tree (R,Tree (B,Tree (B,Tree (R,Empty,652,22,Empty),655,430,Empty),656,674,Tree (B,Empty,657,65,Empty)),660,3,Tree (B,Tree (B,Empty,661,91,Empty),662,0,Tree (B,Tree (R,Empty,663,82,Empty),664,326,Empty))),665,6,Tree (B,Tree (B,Empty,666,60,Empty),667,832,Tree (R,Tree (B,Empty,668,6,Empty),670,8,Tree (B,Empty,671,0,Empty)))),672,2,Tree (B,Tree (R,Tree (B,Tree (B,Empty,673,7,Empty),674,8,Tree (B,Empty,676,848,Empty)),677,8,Tree (B,Tree (B,Empty,678,7,Empty),679,71,Tree (B,Empty,680,7,Empty))),682,6,Tree (R,Tree (B,Tree (B,Empty,683,5,Empty),685,8,Tree (B,Empty,686,87,Empty)),687,0,Tree (B,Tree (B,Empty,688,7,Empty),689,398,Tree (R,Tree (B,Empty,692,47,Empty),693,1,Tree (B,Empty,694,28,Tree (R,Empty,695,86,Empty))))))),696,5,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Empty,697,4,Empty),698,3,Tree (B,Empty,699,3,Tree (R,Empty,700,708,Empty))),701,55,Tree (R,Tree (B,Empty,702,40,Empty),703,9,Tree (B,Empty,705,1,Tree (R,Empty,707,37,Empty)))),708,2,Tree (B,Tree (B,Tree (R,Empty,710,56,Empty),711,56,Empty),712,9,Tree (B,Empty,713,38,Tree (R,Empty,714,7,Empty)))),715,39,Tree (R,Tree (B,Tree (B,Tree (B,Empty,718,0,Tree (R,Empty,720,695,Empty)),721,45,Tree (B,Tree (R,Empty,722,71,Empty),723,226,Tree (R,Empty,724,93,Empty))),725,657,Tree (B,Tree (B,Empty,726,3,Tree (R,Empty,727,0,Empty)),728,1,Tree (B,Empty,729,549,Empty))),730,818,Tree (B,Tree (B,Tree (B,Empty,733,42,Empty),735,8,Tree (B,Empty,736,7,Empty)),737,0,Tree (B,Tree (B,Empty,738,758,Empty),739,9,Tree (B,Empty,740,43,Tree (R,Empty,742,82,Empty))))))),743,6734,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Empty,744,77,Empty),745,5,Empty),746,73,Tree (B,Empty,747,7,Empty)),748,883,Tree (B,Empty,749,3,Tree (R,Empty,750,5,Empty))),751,9,Tree (B,Tree (B,Tree (R,Empty,752,2,Empty),753,9,Empty),754,4,Tree (R,Tree (B,Empty,755,7,Empty),756,7,Tree (B,Tree (R,Empty,758,55,Empty),759,315,Empty)))),760,5,Tree (R,Tree (B,Tree (B,Tree (B,Empty,762,10,Empty),763,4,Tree (R,Tree (B,Empty,764,0,Empty),765,7,Tree (B,Tree (R,Empty,767,85,Empty),768,64,Empty))),769,7,Tree (B,Tree (B,Empty,771,443,Empty),772,87,Tree (B,Empty,773,0,Empty))),776,7,Tree (B,Tree (B,Tree (B,Tree (R,Empty,777,7,Empty),778,6,Empty),779,12,Tree (B,Empty,781,7,Empty)),782,50,Tree (B,Tree (B,Empty,783,3,Empty),784,6,Tree (B,Empty,785,4,Tree (R,Empty,787,13,Empty)))))))),788,46,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Tree (B,Empty,790,39,Empty),791,4,Tree (B,Empty,793,7,Empty)),794,77,Tree (B,Tree (B,Empty,796,79,Empty),797,0,Tree (R,Tree (B,Tree (R,Empty,798,469,Empty),799,8,Empty),800,7,Tree (B,Empty,801,85,Empty)))),802,42,Tree (B,Tree (B,Tree (R,Empty,803,194,Empty),804,72,Tree (R,Empty,805,900,Empty)),807,1,Tree (B,Empty,808,49,Empty))),809,7,Tree (B,Tree (B,Tree (B,Empty,810,6,Tree (R,Empty,811,20,Empty)),813,9,Tree (B,Empty,814,1,Empty)),815,788,Tree (B,Tree (B,Empty,816,8,Empty),818,41,Tree (R,Tree (B,Empty,819,57,Empty),821,81,Tree (B,Empty,822,276,Empty))))),824,2,Tree (R,Tree (B,Tree (R,Tree (B,Tree (B,Empty,825,6,Tree (R,Empty,827,4,Empty)),828,7109,Tree (B,Empty,829,6,Empty)),830,1,Tree (B,Tree (B,Empty,831,9,Empty),832,20,Tree (B,Empty,833,835,Empty))),834,35,Tree (B,Tree (R,Tree (B,Empty,835,9,Tree (R,Empty,836,7,Empty)),838,35,Tree (B,Empty,840,463,Empty)),841,8,Tree (B,Empty,843,67,Tree (R,Empty,845,354,Empty)))),846,18,Tree (B,Tree (B,Tree (B,Empty,847,0,Tree (R,Empty,848,0,Empty)),849,31,Tree (B,Tree (R,Empty,850,34,Empty),851,1,Empty)),852,2405,Tree (B,Tree (B,Empty,853,4,Empty),854,124,Tree (B,Tree (R,Empty,855,78,Empty),856,91,Tree (R,Empty,857,1,Empty)))))),858,47,Tree (B,Tree (R,Tree (B,Tree (B,Tree (B,Empty,860,307,Tree (R,Empty,861,8428,Empty)),862,6,Tree (R,Tree (B,Tree (R,Empty,863,57,Empty),865,299,Empty),866,810,Tree (B,Empty,867,693,Tree (R,Empty,868,18,Empty)))),869,6,Tree (B,Tree (B,Empty,870,7286,Empty),872,548,Tree (B,Tree (R,Empty,873,2,Empty),874,6,Empty))),875,9,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Empty,876,7,Empty),877,932,Tree (B,Empty,879,35,Empty)),880,93,Tree (B,Empty,881,5250,Empty)),882,76,Tree (B,Tree (B,Tree (R,Empty,883,91,Empty),885,0,Empty),886,97,Tree (B,Empty,888,738,Tree (R,Empty,889,869,Empty)))),892,203,Tree (B,Tree (B,Empty,893,268,Tree (R,Empty,894,17,Empty)),895,1,Tree (B,Empty,896,48,Tree (R,Empty,897,8,Empty))))),900,36,Tree (B,Tree (R,Tree (B,Tree (B,Empty,901,5391,Empty),902,856,Tree (R,Tree (B,Empty,904,635,Empty),905,54,Tree (B,Empty,906,8,Empty))),907,32,Tree (B,Tree (B,Tree (R,Empty,908,1,Empty),910,80,Empty),912,8,Tree (R,Tree (B,Tree (R,Empty,915,27,Empty),916,17,Empty),917,8,Tree (B,Empty,919,9,Empty)))),920,1,Tree (B,Tree (B,Empty,921,9,Tree (R,Empty,922,65,Empty)),924,86,Tree (B,Empty,925,10,Empty))))))),926,2,Tree (B,Tree (B,Tree (B,Tree (B,Tree (B,Tree (B,Tree (B,Empty,927,2,Tree (R,Empty,929,76,Empty)),931,43,Tree (R,Tree (B,Empty,932,27,Empty),933,39,Tree (B,Empty,934,9,Empty))),935,921,Tree (B,Tree (B,Tree (R,Empty,936,41,Empty),937,2,Empty),938,225,Tree (R,Tree (B,Empty,939,4,Empty),940,37,Tree (B,Empty,941,9,Empty)))),946,90,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Tree (R,Empty,947,571,Empty),948,7,Empty),949,7,Tree (B,Tree (R,Empty,950,0,Empty),952,91,Empty)),953,9,Tree (R,Tree (B,Empty,956,92,Tree (R,Empty,957,103,Empty)),958,16,Tree (B,Empty,959,8,Empty))),960,6,Tree (B,Tree (R,Tree (B,Empty,961,20,Empty),962,8,Tree (B,Tree (R,Empty,963,3259,Empty),966,3,Empty)),967,4,Tree (B,Tree (R,Empty,968,2,Empty),969,414,Tree (R,Empty,970,66,Empty)))),971,76,Tree (B,Tree (B,Empty,972,9,Empty),974,8,Tree (R,Tree (B,Tree (R,Empty,975,8,Empty),976,6,Tree (R,Empty,978,73,Empty)),979,9,Tree (B,Empty,980,4126,Empty))))),981,69,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Empty,982,7,Empty),983,7,Tree (B,Empty,984,7,Empty)),985,1,Tree (B,Empty,987,63,Empty)),988,47,Tree (B,Tree (R,Tree (B,Tree (R,Empty,989,13,Empty),991,3034,Empty),992,8,Tree (B,Empty,993,122,Tree (R,Empty,994,5,Empty))),995,56,Tree (B,Empty,997,456,Tree (R,Empty,998,6,Empty)))),999,34,Tree (B,Tree (B,Empty,1019,0,Empty),1040,7,Tree (B,Empty,1069,9,Empty))),1082,2,Tree (R,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Empty,1091,3,Empty),1116,7,Tree (B,Empty,1118,3,Empty)),1146,9,Tree (B,Empty,1156,0,Empty)),1170,5,Tree (B,Tree (B,Empty,1260,1,Tree (R,Empty,1270,92,Empty)),1273,7,Tree (B,Empty,1307,30,Tree (R,Empty,1319,23,Empty)))),1337,9,Tree (B,Tree (B,Tree (R,Empty,1349,45,Empty),1375,1,Tree (R,Empty,1382,4,Empty)),1398,3209,Tree (B,Empty,1407,28,Tree (R,Empty,1419,4,Empty)))),1433,7,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Empty,1438,7308,Empty),1442,3456,Tree (B,Empty,1480,0,Empty)),1518,9790,Tree (B,Empty,1528,588,Empty)),1540,7,Tree (B,Tree (B,Empty,1589,16,Empty),1640,1,Tree (R,Tree (B,Tree (R,Empty,1660,9,Empty),1672,6892,Empty),1733,3,Tree (B,Empty,1748,5,Empty)))),1749,47,Tree (B,Tree (B,Empty,1771,1,Empty),1796,74,Tree (B,Tree (R,Empty,1802,9,Empty),1848,902,Empty)))))),1866,910,Tree (B,Tree (B,Tree (R,Tree (B,Tree (B,Tree (R,Tree (B,Empty,1884,6496,Tree (R,Empty,1885,2,Empty)),1888,4,Tree (B,Empty,1916,1,Empty)),1918,9,Tree (R,Tree (B,Tree (R,Empty,1941,5,Empty),1967,89,Empty),1994,423,Tree (B,Empty,1999,4,Empty))),2028,8,Tree (B,Tree (B,Empty,2064,6,Empty),2136,26,Tree (B,Tree (R,Empty,2142,1,Empty),2171,38,Empty))),2172,7,Tree (B,Tree (B,Tree (B,Tree (R,Empty,2184,5,Empty),2190,988,Empty),2309,3,Tree (B,Empty,2357,3,Empty)),2359,2,Tree (B,Tree (B,Empty,2360,3,Empty),2379,53,Tree (B,Empty,2398,977,Tree (R,Empty,2437,0,Empty))))),2537,6,Tree (B,Tree (B,Tree (R,Tree (B,Empty,2566,0,Empty),2601,57,Tree (B,Empty,2617,22,Empty)),2681,1,Tree (R,Tree (B,Empty,2733,413,Empty),2745,381,Tree (B,Empty,2748,882,Empty))),2750,55,Tree (B,Tree (R,Tree (B,Tree (R,Empty,2811,6,Empty),2839,2,Empty),2854,284,Tree (B,Empty,2896,3,Empty)),2932,485,Tree (B,Empty,2949,9239,Tree (R,Empty,2964,315,Empty))))),2987,3,Tree (B,Tree (R,Tree (B,Tree (B,Tree (B,Empty,2996,655,Empty),3049,2307,Tree (R,Tree (B,Empty,3063,7,Empty),3065,7,Tree (B,Empty,3104,929,Tree (R,Empty,3123,5,Empty)))),3146,6,Tree (B,Tree (R,Tree (B,Tree (R,Empty,3172,5,Empty),3206,19,Empty),3358,40,Tree (B,Tree (R,Empty,3383,0,Empty),3478,4,Empty)),3501,903,Tree (B,Empty,3571,1,Tree (R,Empty,3590,21,Empty)))),3621,0,Tree (B,Tree (B,Tree (B,Empty,3627,3,Empty),3658,2,Tree (B,Tree (R,Empty,3740,6,Empty),3754,105,Tree (R,Empty,3771,0,Empty))),3774,1,Tree (B,Tree (R,Tree (B,Empty,3826,6,Tree (R,Empty,3861,4,Empty)),3868,5,Tree (B,Empty,3893,77,Empty)),3930,8,Tree (B,Empty,3938,97,Empty)))),3948,1,Tree (R,Tree (B,Tree (R,Tree (B,Tree (B,Empty,4031,5,Empty),4032,59,Tree (B,Empty,4043,9,Empty)),4067,90,Tree (B,Tree (R,Tree (B,Empty,4073,463,Empty),4096,50,Tree (B,Empty,4132,69,Empty)),4145,8,Tree (R,Tree (B,Tree (R,Empty,4178,8,Empty),4210,784,Empty),4225,7,Tree (B,Empty,4236,9,Empty)))),4257,52,Tree (B,Tree (B,Tree (R,Empty,4308,32,Empty),4320,2,Empty),4322,249,Tree (B,Empty,4324,0,Empty))),4360,40,Tree (B,Tree (B,Tree (B,Tree (R,Empty,4397,7,Empty),4408,2,Tree (R,Empty,4409,99,Empty)),4424,2,Tree (B,Empty,4549,5,Tree (R,Empty,4559,758,Empty))),4602,6,Tree (B,Tree (B,Empty,4607,838,Empty),4654,5,Tree (B,Tree (R,Empty,4689,55,Empty),4741,446,Empty))))))),4752,0,Tree (B,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Tree (B,Tree (B,Empty,4801,61,Empty),4812,4,Tree (B,Empty,4823,73,Tree (R,Empty,4825,51,Empty))),4848,8,Tree (B,Tree (B,Tree (R,Empty,4856,8,Empty),4861,5,Empty),4869,9,Tree (B,Empty,4872,5,Empty))),4887,2,Tree (B,Tree (B,Tree (B,Empty,4899,2,Empty),4902,4,Tree (B,Tree (R,Empty,4906,2,Empty),4950,33,Empty)),4960,9,Tree (B,Tree (R,Tree (B,Empty,4977,77,Empty),4993,1266,Tree (B,Empty,5009,446,Tree (R,Empty,5010,765,Empty))),5021,5,Tree (R,Tree (B,Empty,5043,36,Tree (R,Empty,5073,3,Empty)),5081,7992,Tree (B,Tree (R,Empty,5182,2,Empty),5196,9,Tree (R,Empty,5206,1,Empty)))))),5243,0,Tree (B,Tree (R,Tree (B,Tree (R,Tree (B,Empty,5286,63,Empty),5333,68,Tree (B,Empty,5352,4382,Empty)),5364,127,Tree (R,Tree (B,Empty,5426,7,Empty),5430,2,Tree (B,Empty,5513,55,Empty))),5541,4,Tree (B,Tree (B,Tree (R,Empty,5566,1,Empty),5568,3,Empty),5671,484,Tree (B,Empty,5691,41,Empty))),5704,92,Tree (B,Tree (B,Tree (R,Empty,5713,42,Empty),5721,9,Empty),5723,588,Tree (B,Empty,5732,9943,Tree (R,Empty,5744,269,Empty))))),5805,7961,Tree (B,Tree (B,Tree (B,Tree (R,Tree (B,Empty,5843,5,Tree (R,Empty,5858,784,Empty)),5864,106,Tree (B,Empty,5883,55,Empty)),5905,29,Tree (R,Tree (B,Empty,5917,9,Empty),5976,2,Tree (B,Empty,5977,756,Empty))),5987,5,Tree (B,Tree (B,Tree (R,Empty,6009,6,Empty),6037,97,Tree (R,Empty,6088,161,Empty)),6099,6,Tree (R,Tree (B,Empty,6110,538,Empty),6112,8,Tree (B,Tree (R,Empty,6119,57,Empty),6133,3,Empty)))),6161,2,Tree (B,Tree (R,Tree (B,Tree (B,Empty,6164,5,Tree (R,Empty,6173,4,Empty)),6232,7,Tree (R,Tree (B,Empty,6269,42,Empty),6287,6,Tree (B,Empty,6289,2,Empty))),6307,95,Tree (B,Tree (R,Tree (B,Empty,6319,8,Empty),6332,49,Tree (B,Empty,6341,51,Empty)),6369,322,Tree (B,Empty,6399,9710,Empty))),6410,378,Tree (R,Tree (B,Tree (R,Tree (B,Tree (R,Empty,6414,12,Empty),6427,2,Empty),6439,50,Tree (B,Empty,6454,44,Tree (R,Empty,6476,861,Empty))),6484,766,Tree (B,Tree (R,Empty,6493,0,Empty),6519,7,Empty)),6534,71,Tree (B,Tree (B,Empty,6562,2,Empty),6577,7,Tree (B,Empty,6579,6,Empty)))))),6619,692,Tree (B,Tree (R,Tree (B,Tree (B,Tree (B,Tree (R,Empty,6621,55,Empty),6626,2,Empty),6643,814,Tree (B,Tree (R,Empty,6703,678,Empty),6707,7,Tree (R,Empty,6729,9,Empty))),6731,210,Tree (B,Tree (B,Empty,6739,5,Empty),6778,511,Tree (B,Empty,6790,8,Empty))),6805,1842,Tree (B,Tree (B,Tree (B,Empty,6831,41,Empty),6888,586,Tree (B,Tree (R,Empty,6953,90,Empty),7013,28,Tree (R,Empty,7056,6,Empty))),7071,439,Tree (B,Tree (R,Tree (B,Tree (R,Empty,7073,5,Empty),7092,0,Empty),7109,18,Tree (B,Tree (R,Empty,7111,0,Empty),7178,35,Empty)),7221,6,Tree (B,Empty,7280,65,Empty)))),7306,10,Tree (R,Tree (B,Tree (B,Tree (B,Tree (R,Empty,7315,8,Empty),7329,1,Tree (R,Empty,7365,932,Empty)),7441,115,Tree (B,Tree (R,Empty,7445,984,Empty),7488,0,Empty)),7496,241,Tree (B,Tree (B,Empty,7516,12,Empty),7544,5,Tree (B,Empty,7579,3,Empty))),7589,5,Tree (B,Tree (B,Tree (B,Empty,7618,7,Tree (R,Empty,7629,0,Empty)),7635,14,Tree (B,Empty,7669,27,Empty)),7732,8,Tree (B,Tree (B,Empty,7747,58,Tree (R,Empty,7750,7,Empty)),7753,3,Tree (B,Tree (R,Empty,7775,459,Empty),7794,980,Empty)))))),7808,89,Tree (B,Tree (B,Tree (B,Tree (B,Tree (B,Tree (R,Empty,7864,0,Empty),7885,4,Empty),8029,594,Tree (B,Tree (R,Empty,8045,55,Empty),8069,0,Empty)),8070,40,Tree (R,Tree (B,Tree (R,Tree (B,Tree (R,Empty,8116,151,Empty),8136,991,Empty),8143,706,Tree (B,Empty,8213,9,Empty)),8228,8,Tree (B,Empty,8244,6,Empty)),8253,288,Tree (B,Tree (B,Empty,8280,50,Empty),8316,5,Tree (B,Empty,8320,1,Tree (R,Empty,8371,4,Empty))))),8376,4,Tree (R,Tree (B,Tree (B,Tree (B,Empty,8380,897,Tree (R,Empty,8399,73,Empty)),8402,25,Tree (B,Tree (R,Empty,8433,8,Empty),8437,6,Empty)),8446,266,Tree (B,Tree (R,Tree (B,Empty,8466,2,Empty),8473,335,Tree (B,Empty,8501,88,Empty)),8515,552,Tree (R,Tree (B,Empty,8517,62,Tree (R,Empty,8529,6,Empty)),8560,1,Tree (B,Empty,8638,98,Empty)))),8656,7,Tree (B,Tree (B,Tree (B,Empty,8672,900,Tree (R,Empty,8713,45,Empty)),8714,8,Tree (B,Empty,8722,1,Empty)),8725,6,Tree (B,Tree (B,Empty,8756,81,Empty),8768,32,Tree (B,Tree (R,Empty,8773,30,Empty),8798,4,Empty))))),8845,128,Tree (B,Tree (R,Tree (B,Tree (B,Tree (B,Empty,8847,99,Empty),8849,62,Tree (B,Empty,8902,11,Tree (R,Empty,9032,129,Empty))),9044,9,Tree (B,Tree (R,Tree (B,Empty,9047,4,Empty),9055,21,Tree (B,Empty,9066,35,Empty)),9098,612,Tree (R,Tree (B,Empty,9140,425,Empty),9183,71,Tree (B,Empty,9188,9,Empty)))),9213,9198,Tree (B,Tree (B,Tree (B,Tree (R,Empty,9298,601,Empty),9311,912,Empty),9312,983,Tree (R,Tree (B,Empty,9331,4,Empty),9354,3,Tree (B,Empty,9423,94,Empty))),9425,4655,Tree (R,Tree (B,Tree (R,Tree (B,Empty,9431,755,Empty),9476,253,Tree (B,Empty,9503,0,Empty)),9518,788,Tree (B,Tree (R,Empty,9527,7,Empty),9536,9,Empty)),9640,4,Tree (B,Tree (B,Empty,9721,256,Empty),9736,4,Tree (B,Empty,9750,2,Empty))))),9816,9,Tree (B,Tree (B,Tree (B,Empty,9826,5,Empty),9832,676,Tree (B,Tree (R,Empty,9874,71,Empty),9893,5,Tree (R,Empty,9900,670,Empty))),9906,79,Tree (B,Tree (B,Empty,9918,633,Empty),9969,90,Tree (B,Empty,9978,3115,Empty)))))))), 2, 2, 0)
================================================================================
failure (1 tests failed, 0 tests errored, ran 1 tests)
|prop_InsertDelete -> 5.81]
[prop_InsertDelete|
generated error fail pass / total     time test name
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete (generating)
[✗]   33    0    1   32 / 1000     0.0s test_prop_InsertDelete

--- Failure --------------------------------------------------------------------

Test test_prop_InsertDelete failed (1 shrink steps):

(Tree (B,Tree (R,Tree (B,Empty,0,7,Tree (R,Empty,3,1,Empty)),5,50,Tree (B,Empty,6,7,Empty)),7,725,Tree (B,Empty,874,95,Empty)), 7, 7, 0)
================================================================================
failure (1 tests failed, 0 tests errored, ran 1 tests)
|prop_InsertDelete -> 4.11]
[prop_InsertDelete|
generated error fail pass / total     time test name
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete
[ ]    0    0    0    0 / 1000     0.0s test_prop_InsertDelete (generating)
[✗]    3    0    1    2 / 1000     0.0s test_prop_InsertDelete

--- Failure --------------------------------------------------------------------

Test test_prop_InsertDelete failed (1 shrink steps):

(Tree (B,Tree (R,Tree (B,Empty,0,72,Empty),2,1,Tree (B,Tree (R,Empty,3,22,Empty),6,78,Empty)),7,7,Tree (B,Tree (R,Empty,87,65,Empty),937,0,Empty)), 2, 2, 2)
================================================================================
failure (1 tests failed, 0 tests errored, ran 1 tests)
|prop_InsertDelete -> 0.14]
